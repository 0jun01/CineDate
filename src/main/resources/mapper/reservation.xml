<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.tenco.movie.repository.interfaces.ReservationRepository">
	<select id="findAll"
		resultType="com.tenco.movie.repository.model.MovieDetailTB">
		select * from movie_detail_tb
	</select>

	<select id="findAscMovie"
		resultType="com.tenco.movie.repository.model.MovieDetailTB">
		select * from movie_detail_tb order by title
	</select>

	<select id="findGradeNmMovie"
		resultType="com.tenco.movie.repository.model.MovieDetailTB">
		SELECT *
		FROM movie_detail_tb
		ORDER BY
		CASE
		WHEN watch_grade_Nm
		= '전체관람가' THEN 1
		WHEN watch_grade_Nm = '12세이상관람가' THEN 2
		WHEN
		watch_grade_Nm = '15세이상관람가' THEN 3
		WHEN watch_grade_Nm = '19세이상관람가'
		THEN 4
		ELSE 5
		END asc
	</select>

	<select id="findAllRegions"
		resultType="com.tenco.movie.repository.model.Regions">
		select *
		from regions_tb
		order by id asc
	</select>

	<select id="findSubRegionById"
		resultType="com.tenco.movie.repository.model.SubRegions">
		select * from subregions_tb
		where region_id = #{id}
		order by
		region_id
	</select>

	<select id="findMovieByFetchedDate"
		resultType="com.tenco.movie.repository.model.MovieDetailTB">
		select distinct(m.movie_id), m.title, m.watch_grade_Nm
		from
		showtimes as s
		left join movie_detail_tb as m on s.movie_id = m.id
		where show_date = #{date}
	</select>

	<select id="findMovieBySubRegion"
		resultType="com.tenco.movie.repository.model.MovieDetailTB">
		select distinct(m.movie_id), m.title, m.watch_grade_Nm
		from
		showtimes as s
		left join movie_detail_tb as m on s.movie_id = m.id
		left
		join screens_tb as sc on s.screen_id = sc.id
		left join theaters_tb as t
		on sc.theater_id = t.id
		where subregion_id =
		#{subRegionId}
	</select>

	<select id="findById"
		resultType="com.tenco.movie.repository.model.Movies">
		select * from movies_tb
		where id = #{id}
	</select>

	<select id="findByMovieIdAndShowDate"
		resultType="com.tenco.movie.repository.model.SubRegions">
		select sub.id as sub_id ,re.id as re_id, sub.name from
		showtimes as sh
		left join screens_tb as s on sh.screen_id = s.id
		left
		join theaters_tb as t on s.theater_id = t.id
		left join subregions_tb as
		sub on sub.id = t.subregion_id
		left join regions_tb as re on re.id =
		sub.region_id
		where sh.movie_id = #{id} AND sh.show_date = #{showDate}
	</select>

	<select id="findTheaterByMovieIdAndshowDate"
		resultType="com.tenco.movie.dto.TheaterCountDTO">
		SELECT
		r.id AS region_id,
		sub.id as sub_id,
		r.name AS
		region_name,
		sub.name,
		COUNT(sh.id) AS movie_count
		FROM
		showtimes AS sh
		LEFT JOIN screens_tb AS s ON s.id = sh.screen_id
		LEFT JOIN theaters_tb
		AS t ON t.id = s.theater_id
		LEFT JOIN subregions_tb AS sub ON sub.id =
		t.subregion_id
		LEFT JOIN regions_tb AS r ON r.id = sub.region_id
		WHERE
		sh.show_date = #{showDate}
		AND sh.movie_id = #{movieId}
		GROUP BY
		r.id,
		sub.id,
		r.name,
		sub.name
	</select>

	<select id="findTimeByShowDateAndMovieIdAndSubregionId"
		resultType="com.tenco.movie.dto.TimeDTO">
		SELECT
		sh.id as showtime_id, show_time , capacity, s.name
		FROM
		showtimes AS sh
		LEFT JOIN screens_tb AS s ON s.id = sh.screen_id
		LEFT JOIN theaters_tb AS t ON t.id = s.theater_id
		LEFT JOIN
		subregions_tb AS sub ON sub.id = t.subregion_id
		LEFT JOIN regions_tb AS
		r ON r.id = sub.region_id
		where show_date = #{showDate} and movie_id =
		#{movieId} and subregion_id = #{subregionId}
	</select>

	<insert id="insertBooking">
		INSERT INTO bookings (user_id, showtime_id, quantity,
		booking_time, status)
		VALUES (#{userId}, #{showTimeId}, #{quantity},
		NOW(), '완료')
	</insert>

	<insert id="insertBookingSeats">
		insert into booking_seats (booking_id, seat_id)
		values
		<foreach collection="seatIds" item="seatId" separator=",">
			(#{bookingId}, #{seatId})
		</foreach>
	</insert>

	<select id="viewBookingByUserIdAndShowTimeId"
		resultType="com.tenco.movie.repository.model.Bookings">
		select
		* from bookings where user_id = #{userId} and
		showtime_id =
		#{showTimeId}
		ORDER BY booking_time DESC
		LIMIT 1
	</select>

	<select id="checkOccupied" resultType="int">
		select seat_id from
		bookings as b
		left join booking_seats as bs on b.id = bs.booking_id
		where showtime_id = #{showtimeId}
	</select>

	<select id="findDateByMovieIdAndTheaterId"
		resultType="com.tenco.movie.dto.ChoicedMovieAndTheater">
		SELECT
		sh.id AS
		showtime_id,
		m.title AS movie_title,
		t.name AS
		theater_name,
		sh.show_date,
		sh.show_time
		FROM
		showtimes sh
		JOIN
		screens_tb
		sc ON
		sh.screen_id = sc.id
		JOIN
		theaters_tb t ON sc.theater_id = t.id
		JOIN
		movies_tb m ON sh.movie_id = m.id
		WHERE
		sh.movie_id = #{movieId}
		AND
		t.id = #{theaterId}
		AND sh.show_date >= CURRENT_DATE
		ORDER BY
		sh.show_date, sh.show_time
	</select>


	<select id="findDateAndTheatersByMovieId"
		resultType="com.tenco.movie.dto.ChoicedMovie">
		SELECT
		sh.show_date,
		t.id AS theater_id,
		t.name AS
		theater_name,
		s.id AS screen_id,
		s.name AS screen_name,
		sh.show_time
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t
		ON s.theater_id = t.id
		WHERE
		sh.movie_id = #{movieId}
		AND sh.show_date >=
		CURRENT_DATE
		ORDER BY
		sh.show_date, t.name, s.name
	</select>

	<select id="findDateAndTheatersBySubRegion"
		resultType="com.tenco.movie.dto.ChoicedMovie">
		SELECT
		sh.show_date,
		t.id AS theater_id,
		t.name AS
		theater_name,
		s.id AS screen_id,
		s.name AS screen_name,
		sh.show_time
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t
		ON s.theater_id = t.id
		WHERE
		t.subregion_id = #{subRegionId}
		AND
		sh.show_date >=
		CURRENT_DATE
		ORDER BY
		sh.show_date, t.name, s.name
	</select>

	<select id="findDateBySubRegionAndMovie"
		resultType="com.tenco.movie.dto.ChoicedMovie">
		SELECT
		sh.show_date,
		t.id AS theater_id,
		t.name AS
		theater_name,
		s.id AS screen_id,
		s.name AS screen_name,
		sh.show_time
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t
		ON s.theater_id = t.id
		WHERE
		t.subregion_id = #{subRegionId}
		And
		sh.movie_id = #{movieId}
		AND
		sh.show_date >=
		CURRENT_DATE
		ORDER BY
		sh.show_date,
		t.name, s.name
	</select>

	<select id="countRegion"
		resultType="com.tenco.movie.dto.RegionCountDTO">
		SELECT
		r.name AS region_name,
		COUNT(DISTINCT t.id) AS
		theater_count
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t ON s.theater_id = t.id
		JOIN
		subregions_tb sr ON
		t.subregion_id = sr.id
		JOIN
		regions_tb r ON sr.region_id = r.id
		WHERE
		sh.movie_id = #{movieId}
		AND sh.show_date >= CURRENT_DATE
		GROUP BY
		r.name
		ORDER BY
		r.name
	</select>

	<select id="countRegionByDate"
		resultType="com.tenco.movie.dto.RegionCountDTO">
		SELECT
		r.name AS region_name,
		COUNT(DISTINCT t.id) AS
		theater_count
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t ON s.theater_id = t.id
		JOIN
		subregions_tb sr ON
		t.subregion_id = sr.id
		JOIN
		regions_tb r ON sr.region_id = r.id
		WHERE
		sh.show_date = #{date}
		AND sh.show_date >= CURRENT_DATE
		GROUP BY
		r.name
		ORDER BY
		r.name
	</select>

	<select id="countFirstRegion"
		resultType="com.tenco.movie.dto.RegionCountDTO">
		SELECT
		r.name AS region_name,
		COUNT(DISTINCT t.id) AS
		theater_count
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t ON s.theater_id = t.id
		JOIN
		subregions_tb sr ON
		t.subregion_id = sr.id
		JOIN
		regions_tb r ON sr.region_id = r.id
		WHERE
		sh.show_date >= CURRENT_DATE
		GROUP BY
		r.name
		ORDER BY
		r.name
	</select>

	<select id="findSubRegionByMovie"
		resultType="com.tenco.movie.dto.SubRegionDTO">
		SELECT sr.id, sr.name
		FROM subregions_tb sr
		JOIN theaters_tb
		th ON sr.id = th.subregion_id
		JOIN screens_tb sc ON th.id =
		sc.theater_id
		JOIN showtimes st ON sc.id = st.screen_id
		WHERE
		st.movie_id = #{movieId}
		AND st.show_date >= CURDATE()
		AND (st.show_date
		> CURDATE() OR (st.show_date = CURDATE() AND
		st.show_time >=
		CURTIME()))
		GROUP BY sr.id, sr.name
	</select>

	<select id="findSubRegionByDate"
		resultType="com.tenco.movie.dto.SubRegionDTO">
		SELECT sr.id, sr.name
		FROM subregions_tb sr
		JOIN theaters_tb
		th ON sr.id = th.subregion_id
		JOIN screens_tb sc ON th.id =
		sc.theater_id
		JOIN showtimes st ON sc.id = st.screen_id
		WHERE
		st.show_date = #{date}
		AND st.show_date >= CURRENT_DATE
		AND
		(st.show_date > CURRENT_DATE OR (st.show_date = CURRENT_DATE AND
		st.show_time >= CURRENT_DATE))
		GROUP BY sr.id, sr.name
	</select>

	<select id="viewFirstSubRegion"
		resultType="com.tenco.movie.dto.SubRegionDTO">
		SELECT sr.id, sr.name
		FROM subregions_tb sr
		JOIN theaters_tb
		th ON sr.id = th.subregion_id
		JOIN screens_tb sc ON th.id =
		sc.theater_id
		JOIN showtimes st ON sc.id = st.screen_id
		WHERE
		st.show_date >= CURRENT_DATE
		AND
		(st.show_date > CURRENT_DATE OR
		(st.show_date = CURRENT_DATE AND
		st.show_time >= CURRENT_DATE))
		GROUP BY
		sr.id, sr.name
	</select>

	<select id="countRegionByMovieAndDate"
		resultType="com.tenco.movie.dto.RegionCountDTO">
		SELECT
		r.name AS region_name,
		COUNT(DISTINCT t.id) AS
		theater_count
		FROM
		showtimes sh
		JOIN
		screens_tb s ON sh.screen_id = s.id
		JOIN
		theaters_tb t ON s.theater_id = t.id
		JOIN
		subregions_tb sr ON
		t.subregion_id = sr.id
		JOIN
		regions_tb r ON sr.region_id = r.id
		WHERE
		sh.movie_id = #{movieId}
		AND sh.show_date = #{date}
		GROUP BY
		r.name
		ORDER
		BY
		r.name
	</select>

	<select id="findSubRegionByMovieAndDate"
		resultType="com.tenco.movie.dto.SubRegionDTO">
		SELECT
		sr.id,
		sr.name
		FROM
		subregions_tb sr
		JOIN
		theaters_tb th
		ON sr.id = th.subregion_id
		JOIN
		screens_tb sc ON th.id = sc.theater_id
		JOIN
		showtimes st ON sc.id = st.screen_id
		WHERE
		st.movie_id = #{movieId}
		AND st.show_date = #{date}
		AND st.show_time >= CURRENT_DATE
		GROUP BY
		sr.id, sr.name
	</select>

	<select id="viewFirstOpacity"
		resultType="com.tenco.movie.dto.SubRegionDTO">
		SELECT sr.id, sr.name
		FROM subregions_tb sr
		JOIN theaters_tb
		th ON sr.id = th.subregion_id
		JOIN screens_tb sc ON th.id =
		sc.theater_id
		JOIN showtimes st ON sc.id = st.screen_id
		WHERE
		st.show_date >= CURRENT_DATE
		AND
		(st.show_date > CURRENT_DATE OR
		(st.show_date = CURRENT_DATE AND
		st.show_time >= CURRENT_DATE))
		GROUP BY
		sr.id, sr.name
	</select>

	<select id="myreservation"
		resultType="com.tenco.movie.dto.MyReservationDTO">
		SELECT DISTINCT
		b.id AS booking_id,
		b.booking_time,
		b.quantity,
		s.show_date,
		s.show_time,
		m.title AS movie_title,
		se.seat_number AS reserved_seat
		FROM
		bookings b
		JOIN
		showtimes s ON
		b.showtime_id = s.id
		JOIN
		movies_tb m ON s.movie_id = m.id
		JOIN
		booking_seats bs ON b.id = bs.booking_id
		JOIN
		seats se ON bs.seat_id =
		se.id
		WHERE
		b.user_id = #{userId}
		ORDER BY
		b.booking_time DESC
	</select>

	<select id="checkUserReservationForMovie"
		resultType="com.tenco.movie.dto.MyReservationDTO">
		SELECT DISTINCT
		b.id AS booking_id,
		b.booking_time,
		b.quantity,
		s.show_date,
		s.show_time,
		m.title AS movie_title,
		se.seat_number AS reserved_seat
		FROM
		bookings b
		JOIN
		showtimes s ON
		b.showtime_id = s.id
		JOIN
		movies_tb m ON s.movie_id = m.id
		JOIN
		booking_seats bs ON b.id = bs.booking_id
		JOIN
		seats se ON bs.seat_id =
		se.id
		WHERE
		b.user_id = #{userId} AND s.movie_id = #{movieId}
		ORDER BY
		b.booking_time DESC
	</select>

</mapper>	
